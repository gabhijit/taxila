/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ReportItem : indicates performed modivications.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ReportItem {
    /// Contains a JSON pointer value (as defined in IETF RFC 6901) that references a location of a resource to which the modification is subject. 
    #[serde(rename = "path")]
    pub path: String,
    /// A human-readable reason providing details on the reported modification failure. The reason string should identify the operation that failed using the operation's array index to assist in correlation of the invalid parameter with the failed operation, e.g. \"Replacement value invalid for attribute (failed operation index= 4)\". 
    #[serde(rename = "reason", skip_serializing_if = "Option::is_none")]
    pub reason: Option<String>,
}

impl ReportItem {
    /// indicates performed modivications.
    pub fn new(path: String) -> ReportItem {
        ReportItem {
            path,
            reason: None,
        }
    }
}



/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// EcsServerAddrRm : This data type is defined in the same way as the ' EcsServerAddr ' data type, but with the OpenAPI 'nullable: true' property. 



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EcsServerAddrRm {
    #[serde(rename = "ecsFqdnList", skip_serializing_if = "Option::is_none")]
    pub ecs_fqdn_list: Option<Vec<String>>,
    #[serde(rename = "ecsIpAddressList", skip_serializing_if = "Option::is_none")]
    pub ecs_ip_address_list: Option<Vec<crate::models::IpAddr>>,
    #[serde(rename = "ecsUriList", skip_serializing_if = "Option::is_none")]
    pub ecs_uri_list: Option<Vec<String>>,
    #[serde(rename = "ecsProviderId", skip_serializing_if = "Option::is_none")]
    pub ecs_provider_id: Option<String>,
}

impl EcsServerAddrRm {
    /// This data type is defined in the same way as the ' EcsServerAddr ' data type, but with the OpenAPI 'nullable: true' property. 
    pub fn new() -> EcsServerAddrRm {
        EcsServerAddrRm {
            ecs_fqdn_list: None,
            ecs_ip_address_list: None,
            ecs_uri_list: None,
            ecs_provider_id: None,
        }
    }
}



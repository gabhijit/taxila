/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SupportedGadShapesAnyOf {
    #[serde(rename = "POINT")]
    Point,
    #[serde(rename = "POINT_UNCERTAINTY_CIRCLE")]
    PointUncertaintyCircle,
    #[serde(rename = "POINT_UNCERTAINTY_ELLIPSE")]
    PointUncertaintyEllipse,
    #[serde(rename = "POLYGON")]
    Polygon,
    #[serde(rename = "POINT_ALTITUDE")]
    PointAltitude,
    #[serde(rename = "POINT_ALTITUDE_UNCERTAINTY")]
    PointAltitudeUncertainty,
    #[serde(rename = "ELLIPSOID_ARC")]
    EllipsoidArc,
    #[serde(rename = "LOCAL_2D_POINT_UNCERTAINTY_ELLIPSE")]
    Local2DPointUncertaintyEllipse,
    #[serde(rename = "LOCAL_3D_POINT_UNCERTAINTY_ELLIPSOID")]
    Local3DPointUncertaintyEllipsoid,

}

impl ToString for SupportedGadShapesAnyOf {
    fn to_string(&self) -> String {
        match self {
            Self::Point => String::from("POINT"),
            Self::PointUncertaintyCircle => String::from("POINT_UNCERTAINTY_CIRCLE"),
            Self::PointUncertaintyEllipse => String::from("POINT_UNCERTAINTY_ELLIPSE"),
            Self::Polygon => String::from("POLYGON"),
            Self::PointAltitude => String::from("POINT_ALTITUDE"),
            Self::PointAltitudeUncertainty => String::from("POINT_ALTITUDE_UNCERTAINTY"),
            Self::EllipsoidArc => String::from("ELLIPSOID_ARC"),
            Self::Local2DPointUncertaintyEllipse => String::from("LOCAL_2D_POINT_UNCERTAINTY_ELLIPSE"),
            Self::Local3DPointUncertaintyEllipsoid => String::from("LOCAL_3D_POINT_UNCERTAINTY_ELLIPSOID"),
        }
    }
}

impl Default for SupportedGadShapesAnyOf {
    fn default() -> SupportedGadShapesAnyOf {
        Self::Point
    }
}





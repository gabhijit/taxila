/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// BatteryIndication : Parameters \"replaceableInd\" and \"rechargeableInd\" are only included if the value of Parameter \"batteryInd\" is true. 



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct BatteryIndication {
    /// This IE shall indicate whether the UE is battery powered or not. true: the UE is battery powered; false or absent: the UE is not battery powered 
    #[serde(rename = "batteryInd", skip_serializing_if = "Option::is_none")]
    pub battery_ind: Option<bool>,
    /// This IE shall indicate whether the battery of the UE is replaceable or not. true: the battery of the UE is replaceable; false or absent: the battery of the UE is not replaceable. 
    #[serde(rename = "replaceableInd", skip_serializing_if = "Option::is_none")]
    pub replaceable_ind: Option<bool>,
    /// This IE shall indicate whether the battery of the UE is rechargeable or not. true: the battery of UE is rechargeable; false or absent: the battery of the UE is not rechargeable. 
    #[serde(rename = "rechargeableInd", skip_serializing_if = "Option::is_none")]
    pub rechargeable_ind: Option<bool>,
}

impl BatteryIndication {
    /// Parameters \"replaceableInd\" and \"rechargeableInd\" are only included if the value of Parameter \"batteryInd\" is true. 
    pub fn new() -> BatteryIndication {
        BatteryIndication {
            battery_ind: None,
            replaceable_ind: None,
            rechargeable_ind: None,
        }
    }
}



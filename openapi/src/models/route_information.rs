/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// RouteInformation : At least one of the \"ipv4Addr\" attribute and the \"ipv6Addr\" attribute shall be included in the \"RouteInformation\" data type. 



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RouteInformation {
    /// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. 
    #[serde(rename = "ipv4Addr", skip_serializing_if = "Option::is_none")]
    pub ipv4_addr: Option<String>,
    #[serde(rename = "ipv6Addr", skip_serializing_if = "Option::is_none")]
    pub ipv6_addr: Option<Box<crate::models::Ipv6Addr>>,
    /// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
    #[serde(rename = "portNumber")]
    pub port_number: i32,
}

impl RouteInformation {
    /// At least one of the \"ipv4Addr\" attribute and the \"ipv6Addr\" attribute shall be included in the \"RouteInformation\" data type. 
    pub fn new(port_number: i32) -> RouteInformation {
        RouteInformation {
            ipv4_addr: None,
            ipv6_addr: None,
            port_number,
        }
    }
}



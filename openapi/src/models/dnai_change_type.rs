/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// DnaiChangeType : Possible values are: - EARLY: Early notification of UP path reconfiguration. - EARLY_LATE: Early and late notification of UP path reconfiguration. This value shall   only be present in the subscription to the DNAI change event. - LATE: Late notification of UP path reconfiguration. 

/// Possible values are: - EARLY: Early notification of UP path reconfiguration. - EARLY_LATE: Early and late notification of UP path reconfiguration. This value shall   only be present in the subscription to the DNAI change event. - LATE: Late notification of UP path reconfiguration. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DnaiChangeType {
    #[serde(rename = "EARLY")]
    Early,
    #[serde(rename = "EARLY_LATE")]
    EarlyLate,
    #[serde(rename = "LATE")]
    Late,

}

impl ToString for DnaiChangeType {
    fn to_string(&self) -> String {
        match self {
            Self::Early => String::from("EARLY"),
            Self::EarlyLate => String::from("EARLY_LATE"),
            Self::Late => String::from("LATE"),
        }
    }
}

impl Default for DnaiChangeType {
    fn default() -> DnaiChangeType {
        Self::Early
    }
}





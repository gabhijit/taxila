/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MediaTypeAnyOf {
    #[serde(rename = "AUDIO")]
    Audio,
    #[serde(rename = "VIDEO")]
    Video,
    #[serde(rename = "DATA")]
    Data,
    #[serde(rename = "APPLICATION")]
    Application,
    #[serde(rename = "CONTROL")]
    Control,
    #[serde(rename = "TEXT")]
    Text,
    #[serde(rename = "MESSAGE")]
    Message,
    #[serde(rename = "OTHER")]
    Other,

}

impl ToString for MediaTypeAnyOf {
    fn to_string(&self) -> String {
        match self {
            Self::Audio => String::from("AUDIO"),
            Self::Video => String::from("VIDEO"),
            Self::Data => String::from("DATA"),
            Self::Application => String::from("APPLICATION"),
            Self::Control => String::from("CONTROL"),
            Self::Text => String::from("TEXT"),
            Self::Message => String::from("MESSAGE"),
            Self::Other => String::from("OTHER"),
        }
    }
}

impl Default for MediaTypeAnyOf {
    fn default() -> MediaTypeAnyOf {
        Self::Audio
    }
}





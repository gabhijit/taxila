/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PduSessionType : PduSessionType indicates the type of a PDU session. It shall comply with the provisions defined in table 5.4.3.3-1. 

/// PduSessionType indicates the type of a PDU session. It shall comply with the provisions defined in table 5.4.3.3-1. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PduSessionType {
    #[serde(rename = "IPV4")]
    Ipv4,
    #[serde(rename = "IPV6")]
    Ipv6,
    #[serde(rename = "IPV4V6")]
    Ipv4V6,
    #[serde(rename = "UNSTRUCTURED")]
    Unstructured,
    #[serde(rename = "ETHERNET")]
    Ethernet,

}

impl ToString for PduSessionType {
    fn to_string(&self) -> String {
        match self {
            Self::Ipv4 => String::from("IPV4"),
            Self::Ipv6 => String::from("IPV6"),
            Self::Ipv4V6 => String::from("IPV4V6"),
            Self::Unstructured => String::from("UNSTRUCTURED"),
            Self::Ethernet => String::from("ETHERNET"),
        }
    }
}

impl Default for PduSessionType {
    fn default() -> PduSessionType {
        Self::Ipv4
    }
}





/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Property : If the contentType attribute is set to \"application/json\", then this attribute describes the attributes of the JSON object of the body. 



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Property {
    /// The name of the property
    #[serde(rename = "name")]
    pub name: String,
    /// Indicates whether the property is required – true= required – false(default)= not required. 
    #[serde(rename = "required", skip_serializing_if = "Option::is_none")]
    pub required: Option<bool>,
    /// A regular expression string to be applied to the value of the property.
    #[serde(rename = "regex", skip_serializing_if = "Option::is_none")]
    pub regex: Option<String>,
    /// The property value. When present, it shall be a valid JSON string.
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
}

impl Property {
    /// If the contentType attribute is set to \"application/json\", then this attribute describes the attributes of the JSON object of the body. 
    pub fn new(name: String) -> Property {
        Property {
            name,
            required: None,
            regex: None,
            value: None,
        }
    }
}



/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// WirelineArea : One and only one of the \"globLineIds\", \"hfcNIds\", \"areaCodeB\" and \"areaCodeC\" attributes shall be included in a WirelineArea data structure 



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WirelineArea {
    #[serde(rename = "globalLineIds", skip_serializing_if = "Option::is_none")]
    pub global_line_ids: Option<Vec<String>>,
    #[serde(rename = "hfcNIds", skip_serializing_if = "Option::is_none")]
    pub hfc_n_ids: Option<Vec<String>>,
    /// Values are operator specific.
    #[serde(rename = "areaCodeB", skip_serializing_if = "Option::is_none")]
    pub area_code_b: Option<String>,
    /// Values are operator specific.
    #[serde(rename = "areaCodeC", skip_serializing_if = "Option::is_none")]
    pub area_code_c: Option<String>,
}

impl WirelineArea {
    /// One and only one of the \"globLineIds\", \"hfcNIds\", \"areaCodeB\" and \"areaCodeC\" attributes shall be included in a WirelineArea data structure 
    pub fn new() -> WirelineArea {
        WirelineArea {
            global_line_ids: None,
            hfc_n_ids: None,
            area_code_b: None,
            area_code_c: None,
        }
    }
}



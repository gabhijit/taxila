/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// StringMatchingCondition : A String with Matching Operator



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct StringMatchingCondition {
    #[serde(rename = "matchingString", skip_serializing_if = "Option::is_none")]
    pub matching_string: Option<String>,
    #[serde(rename = "matchingOperator")]
    pub matching_operator: crate::models::MatchingOperator,
}

impl StringMatchingCondition {
    /// A String with Matching Operator
    pub fn new(matching_operator: crate::models::MatchingOperator) -> StringMatchingCondition {
        StringMatchingCondition {
            matching_string: None,
            matching_operator,
        }
    }
}



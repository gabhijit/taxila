/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// GadShape : Common base type for GAD shapes.


#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "shape")]
pub enum GadShape {
    #[serde(rename="ELLIPSOID_ARC")]
    EllipsoidArc {
        #[serde(rename = "point")]
        point: Box<crate::models::GeographicalCoordinates>,
        /// Indicates value of the inner radius.
        #[serde(rename = "innerRadius")]
        inner_radius: i32,
        /// Indicates value of uncertainty.
        #[serde(rename = "uncertaintyRadius")]
        uncertainty_radius: f32,
        /// Indicates value of angle.
        #[serde(rename = "offsetAngle")]
        offset_angle: i32,
        /// Indicates value of angle.
        #[serde(rename = "includedAngle")]
        included_angle: i32,
        /// Indicates value of confidence.
        #[serde(rename = "confidence")]
        confidence: i32,
    },
    #[serde(rename="LOCAL_2D_POINT_UNCERTAINTY_ELLIPSE")]
    Local2dPointUncertaintyEllipse {
        #[serde(rename = "localOrigin")]
        local_origin: Box<crate::models::LocalOrigin>,
        #[serde(rename = "point")]
        point: Box<crate::models::RelativeCartesianLocation>,
        #[serde(rename = "uncertaintyEllipse")]
        uncertainty_ellipse: Box<crate::models::UncertaintyEllipse>,
        /// Indicates value of confidence.
        #[serde(rename = "confidence")]
        confidence: i32,
    },
    #[serde(rename="LOCAL_3D_POINT_UNCERTAINTY_ELLIPSOID")]
    Local3dPointUncertaintyEllipsoid {
        #[serde(rename = "localOrigin")]
        local_origin: Box<crate::models::LocalOrigin>,
        #[serde(rename = "point")]
        point: Box<crate::models::RelativeCartesianLocation>,
        #[serde(rename = "uncertaintyEllipsoid")]
        uncertainty_ellipsoid: Box<crate::models::UncertaintyEllipsoid>,
        /// Indicates value of confidence.
        #[serde(rename = "confidence")]
        confidence: i32,
    },
    #[serde(rename="POINT")]
    Point {
        #[serde(rename = "point")]
        point: Box<crate::models::GeographicalCoordinates>,
    },
    #[serde(rename="POINT_ALTITUDE")]
    PointAltitude {
        #[serde(rename = "point")]
        point: Box<crate::models::GeographicalCoordinates>,
        /// Indicates value of altitude.
        #[serde(rename = "altitude")]
        altitude: f64,
    },
    #[serde(rename="POINT_ALTITUDE_UNCERTAINTY")]
    PointAltitudeUncertainty {
        #[serde(rename = "point")]
        point: Box<crate::models::GeographicalCoordinates>,
        /// Indicates value of altitude.
        #[serde(rename = "altitude")]
        altitude: f64,
        #[serde(rename = "uncertaintyEllipse")]
        uncertainty_ellipse: Box<crate::models::UncertaintyEllipse>,
        /// Indicates value of uncertainty.
        #[serde(rename = "uncertaintyAltitude")]
        uncertainty_altitude: f32,
        /// Indicates value of confidence.
        #[serde(rename = "confidence")]
        confidence: i32,
    },
    #[serde(rename="POINT_UNCERTAINTY_CIRCLE")]
    PointUncertaintyCircle {
        #[serde(rename = "point")]
        point: Box<crate::models::GeographicalCoordinates>,
        /// Indicates value of uncertainty.
        #[serde(rename = "uncertainty")]
        uncertainty: f32,
    },
    #[serde(rename="POINT_UNCERTAINTY_ELLIPSE")]
    PointUncertaintyEllipse {
        #[serde(rename = "point")]
        point: Box<crate::models::GeographicalCoordinates>,
        #[serde(rename = "uncertaintyEllipse")]
        uncertainty_ellipse: Box<crate::models::UncertaintyEllipse>,
        /// Indicates value of confidence.
        #[serde(rename = "confidence")]
        confidence: i32,
    },
    #[serde(rename="POLYGON")]
    Polygon {
        /// List of points.
        #[serde(rename = "pointList")]
        point_list: Vec<crate::models::GeographicalCoordinates>,
    },
}





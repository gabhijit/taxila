/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ScheduledCommunicationType : Possible values are: -DOWNLINK_ONLY: Downlink only -UPLINK_ONLY: Uplink only -BIDIRECTIONA: Bi-directional 

/// Possible values are: -DOWNLINK_ONLY: Downlink only -UPLINK_ONLY: Uplink only -BIDIRECTIONA: Bi-directional 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ScheduledCommunicationType {
    #[serde(rename = "DOWNLINK_ONLY")]
    DownlinkOnly,
    #[serde(rename = "UPLINK_ONLY")]
    UplinkOnly,
    #[serde(rename = "BIDIRECTIONAL")]
    Bidirectional,

}

impl ToString for ScheduledCommunicationType {
    fn to_string(&self) -> String {
        match self {
            Self::DownlinkOnly => String::from("DOWNLINK_ONLY"),
            Self::UplinkOnly => String::from("UPLINK_ONLY"),
            Self::Bidirectional => String::from("BIDIRECTIONAL"),
        }
    }
}

impl Default for ScheduledCommunicationType {
    fn default() -> ScheduledCommunicationType {
        Self::DownlinkOnly
    }
}





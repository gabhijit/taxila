/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// MbsMediaInfo : Represent MBS Media Information.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MbsMediaInfo {
    #[serde(rename = "mbsMedType", skip_serializing_if = "Option::is_none")]
    pub mbs_med_type: Option<Box<crate::models::MediaType>>,
    /// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
    #[serde(rename = "maxReqMbsBwDl", skip_serializing_if = "Option::is_none")]
    pub max_req_mbs_bw_dl: Option<String>,
    /// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
    #[serde(rename = "minReqMbsBwDl", skip_serializing_if = "Option::is_none")]
    pub min_req_mbs_bw_dl: Option<String>,
    #[serde(rename = "codecs", skip_serializing_if = "Option::is_none")]
    pub codecs: Option<Vec<String>>,
}

impl MbsMediaInfo {
    /// Represent MBS Media Information.
    pub fn new() -> MbsMediaInfo {
        MbsMediaInfo {
            mbs_med_type: None,
            max_req_mbs_bw_dl: None,
            min_req_mbs_bw_dl: None,
            codecs: None,
        }
    }
}



/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// UeAuth : Possible values are: - AUTHORIZED: Indicates that the UE is authorized. - NOT_AUTHORIZED: Indicates that the UE is not authorized. 

/// Possible values are: - AUTHORIZED: Indicates that the UE is authorized. - NOT_AUTHORIZED: Indicates that the UE is not authorized. 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum UeAuth {
    #[serde(rename = "AUTHORIZED")]
    Authorized,
    #[serde(rename = "NOT_AUTHORIZED")]
    NotAuthorized,

}

impl ToString for UeAuth {
    fn to_string(&self) -> String {
        match self {
            Self::Authorized => String::from("AUTHORIZED"),
            Self::NotAuthorized => String::from("NOT_AUTHORIZED"),
        }
    }
}

impl Default for UeAuth {
    fn default() -> UeAuth {
        Self::Authorized
    }
}





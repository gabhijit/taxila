/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// HttpMethod : HTTP methodes.

/// HTTP methodes.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum HttpMethod {
    #[serde(rename = "GET")]
    Get,
    #[serde(rename = "POST")]
    Post,
    #[serde(rename = "PUT")]
    Put,
    #[serde(rename = "DELETE")]
    Delete,
    #[serde(rename = "PATCH")]
    Patch,
    #[serde(rename = "OPTIONS")]
    Options,
    #[serde(rename = "HEAD")]
    Head,
    #[serde(rename = "CONNECT")]
    Connect,
    #[serde(rename = "TRACE")]
    Trace,

}

impl ToString for HttpMethod {
    fn to_string(&self) -> String {
        match self {
            Self::Get => String::from("GET"),
            Self::Post => String::from("POST"),
            Self::Put => String::from("PUT"),
            Self::Delete => String::from("DELETE"),
            Self::Patch => String::from("PATCH"),
            Self::Options => String::from("OPTIONS"),
            Self::Head => String::from("HEAD"),
            Self::Connect => String::from("CONNECT"),
            Self::Trace => String::from("TRACE"),
        }
    }
}

impl Default for HttpMethod {
    fn default() -> HttpMethod {
        Self::Get
    }
}





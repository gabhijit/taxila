/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// AtsssCapability : Containes Capability to support procedures related to Access Traffic Steering, Switching, Splitting. 



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AtsssCapability {
    /// Indicates the ATSSS-LL capability to support procedures related to Access Traffic Steering, Switching, Splitting (see clauses 4.2.10, 5.32 of 3GPP TS 23.501). true: Supported false (default): Not Supported 
    #[serde(rename = "atsssLL", skip_serializing_if = "Option::is_none")]
    pub atsss_ll: Option<bool>,
    /// Indicates the MPTCP capability to support procedures related to Access Traffic Steering, Switching, Splitting (see clauses 4.2.10, 5.32 of 3GPP TS 23.501 true: Supported false (default): Not Supported 
    #[serde(rename = "mptcp", skip_serializing_if = "Option::is_none")]
    pub mptcp: Option<bool>,
    /// This IE is only used by the UPF to indicate whether the UPF supports RTT measurement without PMF (see clauses 5.32.2, 6.3.3.3 of 3GPP TS 23.501 true: Supported false (default): Not Supported 
    #[serde(rename = "rttWithoutPmf", skip_serializing_if = "Option::is_none")]
    pub rtt_without_pmf: Option<bool>,
}

impl AtsssCapability {
    /// Containes Capability to support procedures related to Access Traffic Steering, Switching, Splitting. 
    pub fn new() -> AtsssCapability {
        AtsssCapability {
            atsss_ll: None,
            mptcp: None,
            rtt_without_pmf: None,
        }
    }
}



/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PointAltitudeUncertaintyAllOf {
    #[serde(rename = "point")]
    pub point: Box<crate::models::GeographicalCoordinates>,
    /// Indicates value of altitude.
    #[serde(rename = "altitude")]
    pub altitude: f64,
    #[serde(rename = "uncertaintyEllipse")]
    pub uncertainty_ellipse: Box<crate::models::UncertaintyEllipse>,
    /// Indicates value of uncertainty.
    #[serde(rename = "uncertaintyAltitude")]
    pub uncertainty_altitude: f32,
    /// Indicates value of confidence.
    #[serde(rename = "confidence")]
    pub confidence: i32,
}

impl PointAltitudeUncertaintyAllOf {
    pub fn new(point: crate::models::GeographicalCoordinates, altitude: f64, uncertainty_ellipse: crate::models::UncertaintyEllipse, uncertainty_altitude: f32, confidence: i32) -> PointAltitudeUncertaintyAllOf {
        PointAltitudeUncertaintyAllOf {
            point: Box::new(point),
            altitude,
            uncertainty_ellipse: Box::new(uncertainty_ellipse),
            uncertainty_altitude,
            confidence,
        }
    }
}



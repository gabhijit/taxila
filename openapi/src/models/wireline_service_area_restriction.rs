/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// WirelineServiceAreaRestriction : The \"restrictionType\" attribute and the \"areas\" attribute shall be either both present or absent.  The empty array of areas is used when service is allowed/restricted nowhere. 



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WirelineServiceAreaRestriction {
    #[serde(rename = "restrictionType", skip_serializing_if = "Option::is_none")]
    pub restriction_type: Option<crate::models::RestrictionType>,
    #[serde(rename = "areas", skip_serializing_if = "Option::is_none")]
    pub areas: Option<Vec<crate::models::WirelineArea>>,
}

impl WirelineServiceAreaRestriction {
    /// The \"restrictionType\" attribute and the \"areas\" attribute shall be either both present or absent.  The empty array of areas is used when service is allowed/restricted nowhere. 
    pub fn new() -> WirelineServiceAreaRestriction {
        WirelineServiceAreaRestriction {
            restriction_type: None,
            areas: None,
        }
    }
}



/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Atom : contains a search parameter and its positive or negative content.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Atom {
    /// contains the name of a defined query parameter.
    #[serde(rename = "attr")]
    pub attr: String,
    #[serde(rename = "value", deserialize_with = "Option::deserialize")]
    pub value: Option<serde_json::Value>,
    /// indicates whether the negative condition applies for the query condition.
    #[serde(rename = "negative", skip_serializing_if = "Option::is_none")]
    pub negative: Option<bool>,
}

impl Atom {
    /// contains a search parameter and its positive or negative content.
    pub fn new(attr: String, value: Option<serde_json::Value>) -> Atom {
        Atom {
            attr,
            value,
            negative: None,
        }
    }
}



/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// MbsQoSReq : Represent MBS QoS requirements.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MbsQoSReq {
    /// Unsigned integer representing a 5G QoS Identifier (see clause 5.7.2.1 of 3GPP TS 23.501, within the range 0 to 255. 
    #[serde(rename = "5qi")]
    pub param_5qi: i32,
    /// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
    #[serde(rename = "guarBitRate", skip_serializing_if = "Option::is_none")]
    pub guar_bit_rate: Option<String>,
    /// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
    #[serde(rename = "maxBitRate", skip_serializing_if = "Option::is_none")]
    pub max_bit_rate: Option<String>,
    /// Unsigned integer indicating Averaging Window (see clause 5.7.3.6 and 5.7.4 of 3GPP TS 23.501), expressed in milliseconds.
    #[serde(rename = "averWindow", skip_serializing_if = "Option::is_none")]
    pub aver_window: Option<i32>,
    #[serde(rename = "reqMbsArp", skip_serializing_if = "Option::is_none")]
    pub req_mbs_arp: Option<Box<crate::models::Arp>>,
}

impl MbsQoSReq {
    /// Represent MBS QoS requirements.
    pub fn new(param_5qi: i32) -> MbsQoSReq {
        MbsQoSReq {
            param_5qi,
            guar_bit_rate: None,
            max_bit_rate: None,
            aver_window: None,
            req_mbs_arp: None,
        }
    }
}



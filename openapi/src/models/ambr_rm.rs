/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// AmbrRm : This data type is defined in the same way as the 'Ambr' data type, but with the OpenAPI 'nullable: true' property.\" 



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AmbrRm {
    /// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
    #[serde(rename = "uplink")]
    pub uplink: String,
    /// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
    #[serde(rename = "downlink")]
    pub downlink: String,
}

impl AmbrRm {
    /// This data type is defined in the same way as the 'Ambr' data type, but with the OpenAPI 'nullable: true' property.\" 
    pub fn new(uplink: String, downlink: String) -> AmbrRm {
        AmbrRm {
            uplink,
            downlink,
        }
    }
}



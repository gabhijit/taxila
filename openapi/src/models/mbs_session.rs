/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// MbsSession : Individual MBS session



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MbsSession {
    #[serde(rename = "mbsSessionId", skip_serializing_if = "Option::is_none")]
    pub mbs_session_id: Option<Box<crate::models::MbsSessionId>>,
    #[serde(rename = "tmgiAllocReq", skip_serializing_if = "Option::is_none")]
    pub tmgi_alloc_req: Option<bool>,
    #[serde(rename = "tmgi", skip_serializing_if = "Option::is_none")]
    pub tmgi: Option<Box<crate::models::Tmgi>>,
    /// string with format 'date-time' as defined in OpenAPI.
    #[serde(rename = "expirationTime", skip_serializing_if = "Option::is_none")]
    pub expiration_time: Option<String>,
    #[serde(rename = "serviceType")]
    pub service_type: crate::models::MbsServiceType,
    #[serde(rename = "locationDependent", skip_serializing_if = "Option::is_none")]
    pub location_dependent: Option<bool>,
    /// Integer where the allowed values correspond to the value range of an unsigned 16-bit integer.
    #[serde(rename = "areaSessionId", skip_serializing_if = "Option::is_none")]
    pub area_session_id: Option<i32>,
    #[serde(rename = "ingressTunAddrReq", skip_serializing_if = "Option::is_none")]
    pub ingress_tun_addr_req: Option<bool>,
    #[serde(rename = "ingressTunAddr", skip_serializing_if = "Option::is_none")]
    pub ingress_tun_addr: Option<Vec<crate::models::TunnelAddress>>,
    #[serde(rename = "ssm", skip_serializing_if = "Option::is_none")]
    pub ssm: Option<Box<crate::models::Ssm>>,
    #[serde(rename = "mbsServiceArea", skip_serializing_if = "Option::is_none")]
    pub mbs_service_area: Option<Box<crate::models::MbsServiceArea>>,
    #[serde(rename = "extMbsServiceArea", skip_serializing_if = "Option::is_none")]
    pub ext_mbs_service_area: Option<Box<crate::models::ExternalMbsServiceArea>>,
    /// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003; it shall contain either a DNN Network Identifier, or a full DNN with both the Network Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots (e.g. \"Label1.Label2.Label3\"). 
    #[serde(rename = "dnn", skip_serializing_if = "Option::is_none")]
    pub dnn: Option<String>,
    #[serde(rename = "snssai", skip_serializing_if = "Option::is_none")]
    pub snssai: Option<Box<crate::models::Snssai>>,
    #[serde(rename = "activationTime", skip_serializing_if = "Option::is_none")]
    pub activation_time: Option<String>,
    /// string with format 'date-time' as defined in OpenAPI.
    #[serde(rename = "startTime", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<String>,
    /// string with format 'date-time' as defined in OpenAPI.
    #[serde(rename = "terminationTime", skip_serializing_if = "Option::is_none")]
    pub termination_time: Option<String>,
    #[serde(rename = "mbsServInfo", skip_serializing_if = "Option::is_none")]
    pub mbs_serv_info: Option<Box<crate::models::MbsServiceInfo>>,
    #[serde(rename = "mbsSessionSubsc", skip_serializing_if = "Option::is_none")]
    pub mbs_session_subsc: Option<Box<crate::models::MbsSessionSubscription>>,
    #[serde(rename = "activityStatus", skip_serializing_if = "Option::is_none")]
    pub activity_status: Option<crate::models::MbsSessionActivityStatus>,
    #[serde(rename = "anyUeInd", skip_serializing_if = "Option::is_none")]
    pub any_ue_ind: Option<bool>,
    #[serde(rename = "mbsFsaIdList", skip_serializing_if = "Option::is_none")]
    pub mbs_fsa_id_list: Option<Vec<String>>,
}

impl MbsSession {
    /// Individual MBS session
    pub fn new(service_type: crate::models::MbsServiceType) -> MbsSession {
        MbsSession {
            mbs_session_id: None,
            tmgi_alloc_req: None,
            tmgi: None,
            expiration_time: None,
            service_type,
            location_dependent: None,
            area_session_id: None,
            ingress_tun_addr_req: None,
            ingress_tun_addr: None,
            ssm: None,
            mbs_service_area: None,
            ext_mbs_service_area: None,
            dnn: None,
            snssai: None,
            activation_time: None,
            start_time: None,
            termination_time: None,
            mbs_serv_info: None,
            mbs_session_subsc: None,
            activity_status: None,
            any_ue_ind: None,
            mbs_fsa_id_list: None,
        }
    }
}



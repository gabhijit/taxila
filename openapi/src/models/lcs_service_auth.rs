/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// LcsServiceAuth : Possible values are: - \"LOCATION_ALLOWED_WITH_NOTIFICATION\": Location allowed with notification - \"LOCATION_ALLOWED_WITHOUT_NOTIFICATION\": Location allowed without notification - \"LOCATION_ALLOWED_WITHOUT_RESPONSE\": Location with notification and privacy    verification; location allowed if no response - \"LOCATION_RESTRICTED_WITHOUT_RESPONSE\": Location with notification and privacy   verification; location restricted if no response - \"NOTIFICATION_ONLY\": Notification only - \"NOTIFICATION_AND_VERIFICATION_ONLY\": Notification and privacy verification only 

/// Possible values are: - \"LOCATION_ALLOWED_WITH_NOTIFICATION\": Location allowed with notification - \"LOCATION_ALLOWED_WITHOUT_NOTIFICATION\": Location allowed without notification - \"LOCATION_ALLOWED_WITHOUT_RESPONSE\": Location with notification and privacy    verification; location allowed if no response - \"LOCATION_RESTRICTED_WITHOUT_RESPONSE\": Location with notification and privacy   verification; location restricted if no response - \"NOTIFICATION_ONLY\": Notification only - \"NOTIFICATION_AND_VERIFICATION_ONLY\": Notification and privacy verification only 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LcsServiceAuth {
    #[serde(rename = "LOCATION_ALLOWED_WITH_NOTIFICATION")]
    LocationAllowedWithNotification,
    #[serde(rename = "LOCATION_ALLOWED_WITHOUT_NOTIFICATION")]
    LocationAllowedWithoutNotification,
    #[serde(rename = "LOCATION_ALLOWED_WITHOUT_RESPONSE")]
    LocationAllowedWithoutResponse,
    #[serde(rename = "LOCATION_RESTRICTED_WITHOUT_RESPONSE")]
    LocationRestrictedWithoutResponse,
    #[serde(rename = "NOTIFICATION_ONLY")]
    NotificationOnly,
    #[serde(rename = "NOTIFICATION_AND_VERIFICATION_ONLY")]
    NotificationAndVerificationOnly,

}

impl ToString for LcsServiceAuth {
    fn to_string(&self) -> String {
        match self {
            Self::LocationAllowedWithNotification => String::from("LOCATION_ALLOWED_WITH_NOTIFICATION"),
            Self::LocationAllowedWithoutNotification => String::from("LOCATION_ALLOWED_WITHOUT_NOTIFICATION"),
            Self::LocationAllowedWithoutResponse => String::from("LOCATION_ALLOWED_WITHOUT_RESPONSE"),
            Self::LocationRestrictedWithoutResponse => String::from("LOCATION_RESTRICTED_WITHOUT_RESPONSE"),
            Self::NotificationOnly => String::from("NOTIFICATION_ONLY"),
            Self::NotificationAndVerificationOnly => String::from("NOTIFICATION_AND_VERIFICATION_ONLY"),
        }
    }
}

impl Default for LcsServiceAuth {
    fn default() -> LcsServiceAuth {
        Self::LocationAllowedWithNotification
    }
}





/*
 * Common Data Types
 *
 * Common Data Types for Service Based Interfaces. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SpatialValidityCond : Contains the Spatial Validity Condition.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SpatialValidityCond {
    #[serde(rename = "trackingAreaList", skip_serializing_if = "Option::is_none")]
    pub tracking_area_list: Option<Vec<crate::models::Tai>>,
    #[serde(rename = "countries", skip_serializing_if = "Option::is_none")]
    pub countries: Option<Vec<String>>,
    #[serde(rename = "geographicalServiceArea", skip_serializing_if = "Option::is_none")]
    pub geographical_service_area: Option<Box<crate::models::GeoServiceArea>>,
}

impl SpatialValidityCond {
    /// Contains the Spatial Validity Condition.
    pub fn new() -> SpatialValidityCond {
        SpatialValidityCond {
            tracking_area_list: None,
            countries: None,
            geographical_service_area: None,
        }
    }
}


